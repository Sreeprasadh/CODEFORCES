//TLE for this code -> so use buffer reader and writer
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class B_Index_and_Maximum_Value {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        while (t-- > 0) {
           int n = sc.nextInt();
           int m = sc.nextInt();

           long[] a = new long[n];
           long maxi = -1;
           for(int i=0; i<n; i++){
              a[i] = sc.nextLong();
              maxi = Math.max(maxi, a[i]);
           }

           for(int i=0; i<m; i++){

              char ch = sc.next().charAt(0);
              long l = sc.nextLong();
              long r = sc.nextLong();

              if (l <= maxi && maxi <= r) {
                 if (ch == '+') {
                    maxi = maxi + 1;
                 }else{
                    maxi = maxi - 1;
                 }
              }

              System.out.print(maxi + " ");

           }
           System.out.println();

        }

        sc.close();
    }
}
--------------------------------------------------------------------------------------------------------------------------
//using Buffer reader and Writer
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.IOException;

public class B_Index_and_Maximum_Value {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int t = Integer.parseInt(br.readLine().trim());

        while (t-- > 0) {
            String[] firstLine = br.readLine().trim().split(" ");
            int n = Integer.parseInt(firstLine[0]);
            int m = Integer.parseInt(firstLine[1]);

            long[] a = new long[n];
            long maxi = Long.MIN_VALUE;

            String[] arrayElements = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                a[i] = Long.parseLong(arrayElements[i]);
                maxi = Math.max(maxi, a[i]);
            }

            StringBuilder sb = new StringBuilder();

            for (int i = 0; i < m; i++) {
                String[] operation = br.readLine().trim().split(" ");
                char ch = operation[0].charAt(0);
                long l = Long.parseLong(operation[1]);
                long r = Long.parseLong(operation[2]);

                if (l <= maxi && maxi <= r) {
                    if (ch == '+') {
                        maxi = maxi + 1;
                    } else {
                        maxi = maxi - 1;
                    }
                }

                sb.append(maxi).append(" ");
            }
            sb.append("\n");
            bw.write(sb.toString());
        }

        br.close();
        bw.close();
    }
}
