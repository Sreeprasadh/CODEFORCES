import java.util.Scanner;

public class C_Robin_Hood_in_Town {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();  // Number of test cases

        while (t-- > 0) {
            int n = sc.nextInt();  // Number of citizens
            long[] a = new long[n];
            long total = 0;

            // Reading the wealth of each citizen
            for (int i = 0; i < n; i++) {
                a[i] = sc.nextLong();
                total += a[i];
            }

            // If n is <= 2, the problem doesn't make sense (based on your logic)
            if (n <= 2) {
                System.out.println(-1);
                continue;
            }

            // Binary search to find the minimum x
            long low = 0;
            long high = 1000000000000L;  // Setting the high range to 10^12
            long answer = -1;

            while (low <= high) {
                long mid = (low + high) / 2;
                long newTotal = total + mid;  // Adding mid to total wealth

                // Integer arithmetic for calculating average
                double avg = (double)newTotal / n;  // Average wealth
                double halfAvg = avg / 2;   // Half of the average wealth

                int unhappyCount = 0;
                // Counting the number of citizens whose wealth is less than half the average
                for (long wealth : a) {
                    if (wealth < halfAvg) {
                        unhappyCount++;
                    }
                }

                // If more than half the citizens are unhappy, we have a valid x
                if (unhappyCount > n / 2) {
                    answer = mid;  // Valid x found
                    high = mid - 1;  // Try for a smaller x
                } else {
                    low = mid + 1;   // Increase x
                }
            }

            // Output the result
            if (answer != -1) {
                System.out.println(answer);
            } else {
                System.out.println(0);
            }
        }

        sc.close();
    }
}


==================================================================================================================
Optimized approach :
--------------------

import java.util.Arrays;
import java.util.Scanner;

public class C_Robin_Hood_in_Town {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();  // Number of test cases

        while (t-- > 0) {
            int n = sc.nextInt();  // Number of citizens
            long[] a = new long[n];
            long total = 0;

            // Reading the wealth of each citizen
            for (int i = 0; i < n; i++) {
                a[i] = sc.nextLong();
                total += a[i];
            }

            // If n is <= 2, the problem doesn't make sense (based on your logic)
            if (n <= 2) {
                System.out.println(-1);
                continue;
            }
            Arrays.sort(a);

            long req = a[n/2] * 2 * n+1;
            req = req - total;

            if(req <= 0){
                System.out.println(0);
            }else{
                System.out.println(req);
            }
        }

        sc.close();
    }
}
